
package GUI;

import Formes.Cercle;
import Formes.DessinLibre;
import Formes.Dessinable;
import Formes.Droite;
import Formes.Point;
import Formes.Segment;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author pierrecharbit && Lauréna
 */
public class Appli extends javax.swing.JFrame {
    
    boolean premierCliqueBoutonSup = true;
    public Color color = Color.black;
    public int value = 1;
    
    /**
     * Creates new form Appli
     */
    public Appli() {
        initComponents();
        setTitle("Super Dessinateur");
        ardoise1.setApp(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupActions = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        boutonSelec = new javax.swing.JToggleButton();
        boutonCercle = new javax.swing.JToggleButton();
        boutonPolyLine = new javax.swing.JToggleButton();
        javax.swing.JToggleButton boutonDroite = new javax.swing.JToggleButton();
        boutonPolygone = new javax.swing.JToggleButton();
        boutonParallelogramme = new javax.swing.JToggleButton();
        boutonRectangle = new javax.swing.JToggleButton();
        boutonCarre = new javax.swing.JToggleButton();
        boutonEffacerTout = new javax.swing.JButton();
        boutonDessinLibre = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        panneauZoom = new javax.swing.JPanel();
        maxX = new javax.swing.JLabel();
        minX = new javax.swing.JLabel();
        maxY = new javax.swing.JLabel();
        minY = new javax.swing.JLabel();
        valeurMaxX = new javax.swing.JTextField();
        valeurMaxY = new javax.swing.JTextField();
        valeurMinY = new javax.swing.JTextField();
        valeurMinX = new javax.swing.JTextField();
        boutonRepere = new javax.swing.JButton();
        boutonZoomPlus = new javax.swing.JButton();
        boutonReinitialiserZoom = new javax.swing.JButton();
        boutonZoomMoins = new javax.swing.JButton();
        panelCaracterisiques = new javax.swing.JPanel();
        boutonSup = new javax.swing.JButton();
        perimetre = new javax.swing.JLabel();
        valeurPerimetre = new javax.swing.JLabel();
        surface = new javax.swing.JLabel();
        valeurSurface = new javax.swing.JLabel();
        isConvexe = new javax.swing.JLabel();
        booleanConvexe = new javax.swing.JLabel();
        labelElement = new javax.swing.JLabel();
        panelStyleGraphique = new javax.swing.JPanel();
        labelTrait1 = new javax.swing.JLabel();
        boutonCouleur = new javax.swing.JButton();
        labelTrait = new javax.swing.JLabel();
        sliderEpaisseurTrait = new javax.swing.JSlider();
        labelNumeroEpaisseurTrait = new javax.swing.JLabel();
        boutonReinitialiserStyle = new javax.swing.JButton();
        ardoise1 = new GUI.Ardoise();
        labelBas = new javax.swing.JLabel();
        jMenuBar = new javax.swing.JMenuBar();
        menuFichier = new javax.swing.JMenu();
        fichierMenuItemOuvrir = new javax.swing.JMenuItem();
        fichierMenuItemSauver = new javax.swing.JMenuItem();
        menuActions = new javax.swing.JMenu();
        menuEquationCartesienne = new javax.swing.JMenu();
        menuItemDroite = new javax.swing.JMenuItem();
        menuItemCercle = new javax.swing.JMenuItem();
        menuItemSegment = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupActions.add(boutonSelec);
        boutonSelec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_select.png"))); // NOI18N
        boutonSelec.setToolTipText("Sélectionner / Déplacer");
        boutonSelec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSelecActionPerformed(evt);
            }
        });
        boutonSelec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boutonSelecKeyPressed(evt);
            }
        });
        jPanel3.add(boutonSelec);

        buttonGroupActions.add(boutonCercle);
        boutonCercle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/modeCircle.png"))); // NOI18N
        boutonCercle.setToolTipText("Dessiner un cercle");
        boutonCercle.setPreferredSize(new java.awt.Dimension(30, 40));
        boutonCercle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonCercleActionPerformed(evt);
            }
        });
        jPanel3.add(boutonCercle);

        buttonGroupActions.add(boutonPolyLine);
        boutonPolyLine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_lines.png"))); // NOI18N
        boutonPolyLine.setToolTipText("Dessiner une polyline");
        boutonPolyLine.setPreferredSize(new java.awt.Dimension(30, 40));
        boutonPolyLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonPolyLineActionPerformed(evt);
            }
        });
        jPanel3.add(boutonPolyLine);

        buttonGroupActions.add(boutonDroite);
        boutonDroite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_droite.png"))); // NOI18N
        boutonDroite.setToolTipText("Dessiner une droite");
        boutonDroite.setPreferredSize(new java.awt.Dimension(30, 40));
        boutonDroite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonDroiteActionPerformed(evt);
            }
        });
        jPanel3.add(boutonDroite);

        buttonGroupActions.add(boutonPolygone);
        boutonPolygone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_polygons.png"))); // NOI18N
        boutonPolygone.setToolTipText("Dessiner un polygone");
        boutonPolygone.setPreferredSize(new java.awt.Dimension(30, 40));
        boutonPolygone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonPolygoneActionPerformed(evt);
            }
        });
        jPanel3.add(boutonPolygone);

        buttonGroupActions.add(boutonParallelogramme);
        boutonParallelogramme.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_parallelogram.png"))); // NOI18N
        boutonParallelogramme.setToolTipText("Dessiner un parallelogramme");
        boutonParallelogramme.setPreferredSize(new java.awt.Dimension(30, 40));
        boutonParallelogramme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonParallelogrammeActionPerformed(evt);
            }
        });
        jPanel3.add(boutonParallelogramme);

        buttonGroupActions.add(boutonRectangle);
        boutonRectangle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_rectangles3.png"))); // NOI18N
        boutonRectangle.setToolTipText("Dessiner un rectangle");
        boutonRectangle.setPreferredSize(new java.awt.Dimension(30, 40));
        boutonRectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonRectangleActionPerformed(evt);
            }
        });
        jPanel3.add(boutonRectangle);

        buttonGroupActions.add(boutonCarre);
        boutonCarre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_carre3.png"))); // NOI18N
        boutonCarre.setToolTipText("Dessiner un carré");
        boutonCarre.setPreferredSize(new java.awt.Dimension(30, 40));
        boutonCarre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonCarreActionPerformed(evt);
            }
        });
        jPanel3.add(boutonCarre);

        boutonEffacerTout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        boutonEffacerTout.setText("Tout effacer");
        boutonEffacerTout.setToolTipText("Efface toute l'ardoise");
        boutonEffacerTout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonEffacerToutActionPerformed(evt);
            }
        });

        buttonGroupActions.add(boutonDessinLibre);
        boutonDessinLibre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/mode_dessinLibre.png"))); // NOI18N
        boutonDessinLibre.setToolTipText("Dessiner librement");
        boutonDessinLibre.setPreferredSize(new java.awt.Dimension(30, 40));
        boutonDessinLibre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonDessinLibreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(boutonDessinLibre, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(boutonEffacerTout, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(boutonDessinLibre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boutonEffacerTout, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setMaximumSize(null);

        panneauZoom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        maxX.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        maxX.setText("maxX");

        minX.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        minX.setText("minX");

        maxY.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        maxY.setText("maxY");

        minY.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        minY.setText("minY");

        valeurMaxX.setText("10.0");
        valeurMaxX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valeurMaxXActionPerformed(evt);
            }
        });
        valeurMaxX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                valeurMaxXKeyPressed(evt);
            }
        });

        valeurMaxY.setText("10.0");
        valeurMaxY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valeurMaxYActionPerformed(evt);
            }
        });
        valeurMaxY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                valeurMaxYKeyPressed(evt);
            }
        });

        valeurMinY.setText("-1.0");
        valeurMinY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valeurMinYActionPerformed(evt);
            }
        });
        valeurMinY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                valeurMinYKeyPressed(evt);
            }
        });

        valeurMinX.setText("-1.0");
        valeurMinX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valeurMinXActionPerformed(evt);
            }
        });
        valeurMinX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                valeurMinXKeyPressed(evt);
            }
        });

        boutonRepere.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/grid_visible.png"))); // NOI18N
        boutonRepere.setToolTipText("Afficher/Retirer le repère");
        boutonRepere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonRepereActionPerformed(evt);
            }
        });
        boutonRepere.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boutonRepereKeyPressed(evt);
            }
        });

        boutonZoomPlus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/zoom_in.png"))); // NOI18N
        boutonZoomPlus.setToolTipText("Zoom plus");
        boutonZoomPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonZoomPlusActionPerformed(evt);
            }
        });
        boutonZoomPlus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boutonZoomPlusKeyPressed(evt);
            }
        });

        boutonReinitialiserZoom.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        boutonReinitialiserZoom.setText("R");
        boutonReinitialiserZoom.setToolTipText("Reinitialiser Zoom");
        boutonReinitialiserZoom.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boutonReinitialiserZoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonReinitialiserZoomActionPerformed(evt);
            }
        });
        boutonReinitialiserZoom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boutonReinitialiserZoomKeyPressed(evt);
            }
        });

        boutonZoomMoins.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/zoom_out.png"))); // NOI18N
        boutonZoomMoins.setToolTipText("Zoom moins");
        boutonZoomMoins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonZoomMoinsActionPerformed(evt);
            }
        });
        boutonZoomMoins.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boutonZoomMoinsKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panneauZoomLayout = new javax.swing.GroupLayout(panneauZoom);
        panneauZoom.setLayout(panneauZoomLayout);
        panneauZoomLayout.setHorizontalGroup(
            panneauZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panneauZoomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panneauZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panneauZoomLayout.createSequentialGroup()
                        .addComponent(boutonRepere, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(boutonReinitialiserZoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(boutonZoomPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panneauZoomLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panneauZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panneauZoomLayout.createSequentialGroup()
                                .addComponent(maxX)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(valeurMaxX, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panneauZoomLayout.createSequentialGroup()
                                .addComponent(minX)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(valeurMinX, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)))
                        .addGroup(panneauZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxY, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(minY, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(10, 10, 10)))
                .addGroup(panneauZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valeurMaxY, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boutonZoomMoins, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valeurMinY, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );
        panneauZoomLayout.setVerticalGroup(
            panneauZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panneauZoomLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panneauZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boutonRepere, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(boutonZoomMoins, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panneauZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(boutonReinitialiserZoom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(boutonZoomPlus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(20, 20, 20)
                .addGroup(panneauZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxX)
                    .addComponent(valeurMaxX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxY)
                    .addComponent(valeurMaxY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panneauZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minX)
                    .addComponent(valeurMinX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minY)
                    .addComponent(valeurMinY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        boutonSup.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        boutonSup.setText("Supprimer");
        boutonSup.setToolTipText("Supprime un élément");
        boutonSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSupActionPerformed(evt);
            }
        });
        boutonSup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boutonSupKeyPressed(evt);
            }
        });

        perimetre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        perimetre.setText("Perimètre : ");

        valeurPerimetre.setText("NA");

        surface.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        surface.setText("Surface : ");

        valeurSurface.setText("NA");

        isConvexe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        isConvexe.setText("Convexe ?");

        booleanConvexe.setText("NA");

        labelElement.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        labelElement.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelElement.setText("Element sélectionné");
        labelElement.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout panelCaracterisiquesLayout = new javax.swing.GroupLayout(panelCaracterisiques);
        panelCaracterisiques.setLayout(panelCaracterisiquesLayout);
        panelCaracterisiquesLayout.setHorizontalGroup(
            panelCaracterisiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCaracterisiquesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCaracterisiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCaracterisiquesLayout.createSequentialGroup()
                        .addGap(0, 22, Short.MAX_VALUE)
                        .addGroup(panelCaracterisiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCaracterisiquesLayout.createSequentialGroup()
                                .addComponent(boutonSup, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCaracterisiquesLayout.createSequentialGroup()
                                .addGroup(panelCaracterisiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelCaracterisiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCaracterisiquesLayout.createSequentialGroup()
                                            .addComponent(isConvexe)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(booleanConvexe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCaracterisiquesLayout.createSequentialGroup()
                                            .addComponent(surface)
                                            .addGap(18, 18, 18)
                                            .addComponent(valeurSurface, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(panelCaracterisiquesLayout.createSequentialGroup()
                                        .addComponent(perimetre)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(valeurPerimetre, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(19, 19, 19))))
                    .addGroup(panelCaracterisiquesLayout.createSequentialGroup()
                        .addComponent(labelElement, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 10, Short.MAX_VALUE))))
        );
        panelCaracterisiquesLayout.setVerticalGroup(
            panelCaracterisiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCaracterisiquesLayout.createSequentialGroup()
                .addComponent(labelElement, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boutonSup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCaracterisiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(perimetre)
                    .addComponent(valeurPerimetre, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCaracterisiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valeurSurface, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surface, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCaracterisiquesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(booleanConvexe, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isConvexe))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelStyleGraphique.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelTrait1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelTrait1.setText("Couleur :");

        boutonCouleur.setBackground(new java.awt.Color(0, 0, 0));
        boutonCouleur.setToolTipText("Choisir la couleur");
        boutonCouleur.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.white));
        boutonCouleur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonCouleurActionPerformed(evt);
            }
        });
        boutonCouleur.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boutonCouleurKeyPressed(evt);
            }
        });

        labelTrait.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelTrait.setText("Epaisseur du trait :");

        sliderEpaisseurTrait.setMaximum(10);
        sliderEpaisseurTrait.setMinimum(1);
        sliderEpaisseurTrait.setMinorTickSpacing(1);
        sliderEpaisseurTrait.setPaintTicks(true);
        sliderEpaisseurTrait.setValue(1);
        sliderEpaisseurTrait.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderEpaisseurTraitStateChanged(evt);
            }
        });

        labelNumeroEpaisseurTrait.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelNumeroEpaisseurTrait.setText("1");

        boutonReinitialiserStyle.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        boutonReinitialiserStyle.setText("R");
        boutonReinitialiserStyle.setToolTipText("Reinitialiser Style");
        boutonReinitialiserStyle.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        boutonReinitialiserStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonReinitialiserStyleActionPerformed(evt);
            }
        });
        boutonReinitialiserStyle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boutonReinitialiserStyleKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelStyleGraphiqueLayout = new javax.swing.GroupLayout(panelStyleGraphique);
        panelStyleGraphique.setLayout(panelStyleGraphiqueLayout);
        panelStyleGraphiqueLayout.setHorizontalGroup(
            panelStyleGraphiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStyleGraphiqueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sliderEpaisseurTrait, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelNumeroEpaisseurTrait, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addGap(3, 3, 3))
            .addGroup(panelStyleGraphiqueLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(labelTrait1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(boutonCouleur, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(boutonReinitialiserStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(panelStyleGraphiqueLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(labelTrait)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelStyleGraphiqueLayout.setVerticalGroup(
            panelStyleGraphiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStyleGraphiqueLayout.createSequentialGroup()
                .addGroup(panelStyleGraphiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelStyleGraphiqueLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(boutonCouleur, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelStyleGraphiqueLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(boutonReinitialiserStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelTrait1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTrait)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelStyleGraphiqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sliderEpaisseurTrait, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNumeroEpaisseurTrait))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(panelCaracterisiques, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelStyleGraphique, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panneauZoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCaracterisiques, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3)
                .addComponent(panelStyleGraphique, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panneauZoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout ardoise1Layout = new javax.swing.GroupLayout(ardoise1);
        ardoise1.setLayout(ardoise1Layout);
        ardoise1Layout.setHorizontalGroup(
            ardoise1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
        );
        ardoise1Layout.setVerticalGroup(
            ardoise1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );

        labelBas.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        labelBas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelBas.setToolTipText("");

        menuFichier.setText("Fichier");
        menuFichier.setToolTipText("");

        fichierMenuItemOuvrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        fichierMenuItemOuvrir.setText("Ouvrir");
        fichierMenuItemOuvrir.setToolTipText("");
        fichierMenuItemOuvrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fichierMenuItemOuvrirActionPerformed(evt);
            }
        });
        menuFichier.add(fichierMenuItemOuvrir);

        fichierMenuItemSauver.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        fichierMenuItemSauver.setText("Sauver");
        fichierMenuItemSauver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fichierMenuItemSauverActionPerformed(evt);
            }
        });
        menuFichier.add(fichierMenuItemSauver);

        jMenuBar.add(menuFichier);

        menuActions.setText("Actions");

        menuEquationCartesienne.setText("Ajouter par équation cartésienne");

        menuItemDroite.setText("Droite");
        menuItemDroite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemDroiteActionPerformed(evt);
            }
        });
        menuEquationCartesienne.add(menuItemDroite);

        menuItemCercle.setText("Cercle");
        menuItemCercle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCercleActionPerformed(evt);
            }
        });
        menuEquationCartesienne.add(menuItemCercle);

        menuItemSegment.setText("Segment");
        menuItemSegment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSegmentActionPerformed(evt);
            }
        });
        menuEquationCartesienne.add(menuItemSegment);

        menuActions.add(menuEquationCartesienne);

        jMenuBar.add(menuActions);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelBas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ardoise1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ardoise1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelBas, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    Affichage Panneau de droite
    */
    public void affichagePerimetre(Double valeur) {
        if (valeur < 0d) {
            valeurPerimetre.setText("NA");
        }
        else {
            String str = "" + valeur;
            valeurPerimetre.setText(str);            
        }
    }
    
    public void affichageSurface(Double valeur) {
        if (valeur < 0d) {
            valeurSurface.setText("NA");
        }
        else if (valeur == 0) {
            valeurSurface.setText("Croisé");
        }
        else {
            String str = "" + valeur;
            valeurSurface.setText(str);            
        }
    }
    
    public void affichageIsConvexe(boolean valeur) {
        if (valeur == true) {
            booleanConvexe.setText("true");
        }
        else {
            booleanConvexe.setText("false");            
        }
    }
    
    public void texteLabelNomElement(Class name) {
        String str = "" + name;
        labelElement.setText(str.substring(13));
        if (ardoise1.getdCourant() instanceof DessinLibre) {
            labelElement.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.blue, 2));
        }
        else {
            labelElement.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red, 2));
        }
    }
    
    public void reinitialiserAffichage() {
        //ardoise1.setBooleanRemplir(false);
        valeurPerimetre.setText("NA");
        valeurSurface.setText("NA");
        booleanConvexe.setText("NA");
        labelElement.setText("Element sélectionné");
        labelElement.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.black, 2));
        labelBas.setText("");
    }
    
        
    //Boutons ActionPerformed
    private void boutonCercleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonCercleActionPerformed
        this.reinitialiserAffichage();
        ardoise1.setCursor(Cursor.getPredefinedCursor (Cursor.DEFAULT_CURSOR));
        labelBas.setText("Clic 1 : centre du cercle   ---   Drag : choix du rayon   ---   Clic 2 : fixe le cercle");
        ardoise1.setMode("Cercle");
    }//GEN-LAST:event_boutonCercleActionPerformed

    private void boutonSelecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSelecActionPerformed
        this.reinitialiserAffichage();
        ardoise1.setCursor(Cursor.getPredefinedCursor (Cursor.DEFAULT_CURSOR));
        ardoise1.setCursor(Cursor.getPredefinedCursor (Cursor.DEFAULT_CURSOR));
        labelBas.setText("Clic : sélectionne un élément   ---   Drag : déplace l'élément sélectionné (inclus les points des figures)");
        ardoise1.setMode("Select");
    }//GEN-LAST:event_boutonSelecActionPerformed

    private void boutonPolyLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonPolyLineActionPerformed
        this.reinitialiserAffichage();
        ardoise1.setCursor(Cursor.getPredefinedCursor (Cursor.DEFAULT_CURSOR));
        labelBas.setText("Clique gauche : ajoute un point   ---   Clique droit : ajoute le dernier point");
        ardoise1.setMode("PolyLine");
    }//GEN-LAST:event_boutonPolyLineActionPerformed

    private void boutonDroiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonDroiteActionPerformed
        this.reinitialiserAffichage();
        ardoise1.setCursor(Cursor.getPredefinedCursor (Cursor.DEFAULT_CURSOR));
        labelBas.setText("Clique : ajoute deux points formant une droite");
        ardoise1.setMode("Droite");
    }//GEN-LAST:event_boutonDroiteActionPerformed

    private void boutonPolygoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonPolygoneActionPerformed
        this.reinitialiserAffichage();
        ardoise1.setCursor(Cursor.getPredefinedCursor (Cursor.DEFAULT_CURSOR));
        labelBas.setText("Clique gauche : ajoute un point   ---   Clique droit : ajoute le dernier point");
        ardoise1.setMode("Polygone");
    }//GEN-LAST:event_boutonPolygoneActionPerformed

    private void boutonParallelogrammeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonParallelogrammeActionPerformed
        this.reinitialiserAffichage();
        ardoise1.setCursor(Cursor.getPredefinedCursor (Cursor.DEFAULT_CURSOR));
        labelBas.setText("Clique : ajoute un point");
        ardoise1.setMode("Parallelogramme");
    }//GEN-LAST:event_boutonParallelogrammeActionPerformed

    private void boutonRectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonRectangleActionPerformed
        this.reinitialiserAffichage();
        ardoise1.setCursor(Cursor.getPredefinedCursor (Cursor.DEFAULT_CURSOR));
        labelBas.setText("Clique : ajoute un point");
        ardoise1.setMode("Rectangle");
    }//GEN-LAST:event_boutonRectangleActionPerformed

    private void boutonEffacerToutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonEffacerToutActionPerformed
        this.reinitialiserAffichage();
        this.remplissageBoutonCouleur(Color.BLACK);
        sliderEpaisseurTrait.setValue(1);
        color = Color.BLACK;
        value = 1;
        ArrayList<Dessinable> list = ardoise1.getListeDes();
        list.clear();
        ardoise1.setdCourant(null);
        repaint();
    }//GEN-LAST:event_boutonEffacerToutActionPerformed
    
    // Menus ActionPerformed
    private void fichierMenuItemSauverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fichierMenuItemSauverActionPerformed
        JFileChooser dialogue = new JFileChooser();
        int retour = dialogue.showSaveDialog(this.getParent());
            
        if (retour == JFileChooser.APPROVE_OPTION) {
            File fichier = dialogue.getSelectedFile();
            try {
                ObjectOutputStream flot = new ObjectOutputStream(new FileOutputStream(fichier));
                flot.writeObject(ardoise1.getListeDes());
                flot.close();
            }
            catch (IOException e){
                System.out.println("Erreur écriture : " + e);
            }
        }
    }//GEN-LAST:event_fichierMenuItemSauverActionPerformed

    private void fichierMenuItemOuvrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fichierMenuItemOuvrirActionPerformed
        JFileChooser dialogue = new JFileChooser();
        int retour = dialogue.showOpenDialog(this.getParent());
        if (retour == JFileChooser.APPROVE_OPTION) {
            File fichier = dialogue.getSelectedFile();
            try {
               ObjectInputStream flot = new ObjectInputStream(new FileInputStream(fichier));
               ardoise1.setListeDes((ArrayList<Dessinable>)flot.readObject());
               flot.close();
            }
            catch (Exception e) {
                System.out.println("Erreur lecture : " + fichier + e.getMessage());
            }
        }
        repaint();
    }//GEN-LAST:event_fichierMenuItemOuvrirActionPerformed

    private void menuItemDroiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemDroiteActionPerformed
        JOptionPane jop = new JOptionPane();
        String str = "Entrez les trois coefficients a b c de l'équation ax+by+c = 0 séparées par des espaces";
        String dialogue = jop.showInputDialog(null, str);
        try {
            String[] coefficient = dialogue.split(" ");
            double  a = Double.parseDouble(coefficient[0]);
            double  b = Double.parseDouble(coefficient[1]);
            double  c = Double.parseDouble(coefficient[2]);
            Droite droite = new Droite(a, b, c);
            droite.getStyle().setCouleur(color);
            droite.getStyle().setEpaisseur(value);
            ardoise1.getListeDes().add(droite);
            repaint();
        }
        catch (NumberFormatException e) {
            JOptionPane jop2 = new JOptionPane();
            jop2.showMessageDialog(null, "Erreur de format");
        }
        catch (NullPointerException e) {
            System.out.println("Erreur : " + e);
        }
    }//GEN-LAST:event_menuItemDroiteActionPerformed

    private void menuItemCercleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCercleActionPerformed
        JOptionPane jop = new JOptionPane();
        String str = "Entrez les coordonées du centre du cercle x y et son rayon r séparées par des espaces : x y r";
        String dialogue = jop.showInputDialog(null, str);
        //setDefaultCloseOperation(EXIT_ON_CLOSE);
        try {
            String[] coefficient = dialogue.split(" ");
            double  a = Double.parseDouble(coefficient[0]);
            double  b = Double.parseDouble(coefficient[1]);
            double  r = Double.parseDouble(coefficient[2]);
            Cercle cercle = new Cercle(a, b, r);
            cercle.getStyle().setCouleur(color);
            cercle.getStyle().setEpaisseur(value);
            ardoise1.getListeDes().add(cercle);
            repaint();
        }
        catch (NumberFormatException e) {
            JOptionPane jop2 = new JOptionPane();
            jop2.showMessageDialog(null, "Erreur de format");
        }
        catch (NullPointerException e) { 
            System.out.println("Erreur : " + e);
        }
    }//GEN-LAST:event_menuItemCercleActionPerformed

    private void menuItemSegmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSegmentActionPerformed
        JOptionPane jop = new JOptionPane();
        String str = "Entrez les coordonées des extrémités du segment x1 y1 x2 y2 séparés par des espaces";
        String dialogue = jop.showInputDialog(null, str);
        try {
            String[] coefficient = dialogue.split(" ");
            double  x1 = Double.parseDouble(coefficient[0]);
            double  y1 = Double.parseDouble(coefficient[1]);
            double  x2 = Double.parseDouble(coefficient[2]);
            double  y2 = Double.parseDouble(coefficient[3]);
            Segment segment = new Segment(new Point(x1, y1), new Point(x2, y2));
            segment.getStyle().setCouleur(color);
            segment.getStyle().setEpaisseur(value);
            ardoise1.getListeDes().add(segment);
            repaint();
        }
        catch (NumberFormatException e) {
            JOptionPane jop2 = new JOptionPane();
            jop2.showMessageDialog(null, "Erreur de format");
        }
        catch (NullPointerException e) {
            System.out.println("Erreur : " + e);
        }
    }//GEN-LAST:event_menuItemSegmentActionPerformed

    public void changeTextFieldZoomPlusUn(JTextField textField) {
        String old_str = textField.getText();
        Double value = Double.parseDouble(old_str) + 1;
        String new_str = "" + value;
        textField.setText(new_str);  
    }
    
    public void changeTextFieldZoomMoinsUn(JTextField textField) {
        String old_str = textField.getText();
        Double value = Double.parseDouble(old_str) - 1;
        String new_str = "" + value;
        textField.setText(new_str);  
    }
    
    private void boutonCarreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonCarreActionPerformed
        this.reinitialiserAffichage();
        ardoise1.setCursor(Cursor.getPredefinedCursor (Cursor.DEFAULT_CURSOR));
        labelBas.setText("Clique : ajoute un point");
        ardoise1.setMode("Carre");
    }//GEN-LAST:event_boutonCarreActionPerformed
    
    //Pour ajouter les évenements de clavier sur les boutons
    public void KeyPressed (java.awt.event.KeyEvent evt) {
        if (ardoise1.getdCourant() != null) {
            int touche = evt.getKeyChar();
            if (touche == KeyEvent.VK_DELETE){
                this.reinitialiserAffichage();
                ArrayList<Dessinable> list = ardoise1.getListeDes();
                Dessinable courant = ardoise1.getdCourant();
                if (!list.isEmpty()) {
                    list.remove(courant);
                    ardoise1.setdCourant(null);
                }
                ardoise1.repaint();
            }
        }
    }
    private void boutonSelecKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boutonSelecKeyPressed
       this.KeyPressed(evt);
    }//GEN-LAST:event_boutonSelecKeyPressed

    private void boutonCouleurKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boutonCouleurKeyPressed
        this.KeyPressed(evt);
    }//GEN-LAST:event_boutonCouleurKeyPressed

    private void boutonCouleurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonCouleurActionPerformed
        color = JColorChooser.showDialog(null, "Choix Couleur", Color.cyan);
        if (ardoise1.getdCourant() != null) {
            ardoise1.getdCourant().getStyle().couleur = color;
            
        }
        boutonCouleur.setBackground(color);
        repaint();
    }//GEN-LAST:event_boutonCouleurActionPerformed

    private void sliderEpaisseurTraitStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderEpaisseurTraitStateChanged
        labelNumeroEpaisseurTrait.setText(""+sliderEpaisseurTrait.getValue());
        value = sliderEpaisseurTrait.getValue();
        if(ardoise1.getdCourant() != null) {
            ardoise1.getdCourant().getStyle().epaisseur = value;
            repaint();
        }
    }//GEN-LAST:event_sliderEpaisseurTraitStateChanged

    private void boutonZoomMoinsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boutonZoomMoinsKeyPressed
        this.KeyPressed(evt);
    }//GEN-LAST:event_boutonZoomMoinsKeyPressed

    private void boutonZoomMoinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonZoomMoinsActionPerformed
        ardoise1.setxMax(ardoise1.getxMax() + 1);
        ardoise1.setyMax(ardoise1.getyMax() + 1);
        ardoise1.setxMin(ardoise1.getxMin() - 1);
        ardoise1.setyMin(ardoise1.getyMin() - 1);

        changeTextFieldZoomPlusUn(valeurMaxX);
        changeTextFieldZoomPlusUn(valeurMaxY);
        changeTextFieldZoomMoinsUn(valeurMinX);
        changeTextFieldZoomMoinsUn(valeurMinY);

        repaint();
    }//GEN-LAST:event_boutonZoomMoinsActionPerformed

    private void boutonReinitialiserZoomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boutonReinitialiserZoomKeyPressed
        this.KeyPressed(evt);
    }//GEN-LAST:event_boutonReinitialiserZoomKeyPressed

    private void boutonReinitialiserZoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonReinitialiserZoomActionPerformed
        this.reinitialiserAffichage();
        valeurMaxX.setText("10.0");
        ardoise1.setxMax(10);
        valeurMinX.setText("-1.0");
        ardoise1.setxMin(-1);
        valeurMaxY.setText("10.0");
        ardoise1.setyMax(10);
        valeurMinY.setText("-1.0");
        ardoise1.setyMin(-1);
        repaint();
    }//GEN-LAST:event_boutonReinitialiserZoomActionPerformed

    private void boutonZoomPlusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boutonZoomPlusKeyPressed
        this.KeyPressed(evt);
    }//GEN-LAST:event_boutonZoomPlusKeyPressed

    private void boutonZoomPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonZoomPlusActionPerformed
        if (ardoise1.getxMax() - ardoise1.getxMin() > 0 && ardoise1.getyMax() - ardoise1.getyMin() > 0) {
            ardoise1.setxMax(ardoise1.getxMax() - 1);
            ardoise1.setyMax(ardoise1.getyMax() - 1);
            ardoise1.setxMin(ardoise1.getxMin() + 1);
            ardoise1.setyMin(ardoise1.getyMin() + 1);

            changeTextFieldZoomMoinsUn(valeurMaxX);
            changeTextFieldZoomMoinsUn(valeurMaxY);
            changeTextFieldZoomPlusUn(valeurMinX);
            changeTextFieldZoomPlusUn(valeurMinY);

            repaint();
        }
    }//GEN-LAST:event_boutonZoomPlusActionPerformed

    private void boutonRepereKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boutonRepereKeyPressed
        this.KeyPressed(evt);
    }//GEN-LAST:event_boutonRepereKeyPressed

    private void boutonRepereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonRepereActionPerformed
        if (ardoise1.getBooleanRepere() == true) {
            ardoise1.setBooleanRepere(false);
            repaint();
        }
        else {
            ardoise1.setBooleanRepere(true);
            repaint();
        }
    }//GEN-LAST:event_boutonRepereActionPerformed

    private void valeurMinXKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valeurMinXKeyPressed
        this.KeyPressed(evt);
    }//GEN-LAST:event_valeurMinXKeyPressed

    private void valeurMinXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valeurMinXActionPerformed
        this.reinitialiserAffichage();
        String valeurRentree = valeurMinX.getText();
        Double valeur = Double.parseDouble(valeurRentree);
        ardoise1.setxMin(valeur);
        repaint();
    }//GEN-LAST:event_valeurMinXActionPerformed

    private void valeurMinYKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valeurMinYKeyPressed
        this.KeyPressed(evt);
    }//GEN-LAST:event_valeurMinYKeyPressed

    private void valeurMinYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valeurMinYActionPerformed
        this.reinitialiserAffichage();
        String valeurRentree = valeurMinY.getText();
        Double valeur = Double.parseDouble(valeurRentree);
        ardoise1.setyMin(valeur);
        repaint();
    }//GEN-LAST:event_valeurMinYActionPerformed

    private void valeurMaxYKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valeurMaxYKeyPressed
        this.KeyPressed(evt);
    }//GEN-LAST:event_valeurMaxYKeyPressed

    private void valeurMaxYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valeurMaxYActionPerformed
        this.reinitialiserAffichage();
        String valeurRentree = valeurMaxY.getText();
        Double valeur = Double.parseDouble(valeurRentree);
        ardoise1.setyMax(valeur);
        repaint();
    }//GEN-LAST:event_valeurMaxYActionPerformed

    private void valeurMaxXKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valeurMaxXKeyPressed
        this.KeyPressed(evt);
    }//GEN-LAST:event_valeurMaxXKeyPressed

    // Panneau zoom ActionPerformed
    private void valeurMaxXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valeurMaxXActionPerformed
        this.reinitialiserAffichage();
        String valeurRentree = valeurMaxX.getText();
        Double valeur = Double.parseDouble(valeurRentree);
        ardoise1.setxMax(valeur);
        repaint();
    }//GEN-LAST:event_valeurMaxXActionPerformed

    private void boutonSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSupActionPerformed
        this.reinitialiserAffichage();
        if (premierCliqueBoutonSup) {
            JOptionPane.showMessageDialog(null, "Info : Tu peux aussi utiliser la touche 'SUPPR' pour supprimer un élément", "Information", JOptionPane.INFORMATION_MESSAGE);
            premierCliqueBoutonSup = false;
        }
        ArrayList<Dessinable> list = ardoise1.getListeDes();
        Dessinable courant = ardoise1.getdCourant();
        if (!list.isEmpty()) {
            list.remove(courant);
            ardoise1.setdCourant(null);
        }
        repaint();
    }//GEN-LAST:event_boutonSupActionPerformed

    private void boutonSupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boutonSupKeyPressed
        this.KeyPressed(evt);
    }//GEN-LAST:event_boutonSupKeyPressed

    private void boutonDessinLibreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonDessinLibreActionPerformed
        this.reinitialiserAffichage();
        ardoise1.setCursor(Cursor.getPredefinedCursor (Cursor.CROSSHAIR_CURSOR));
        labelBas.setText("Clique : dessine un point  ---  Clique et Drag : dessine librement !");
        ardoise1.setMode("DessinLibre");
    }//GEN-LAST:event_boutonDessinLibreActionPerformed

    private void boutonReinitialiserStyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonReinitialiserStyleActionPerformed
        this.remplissageBoutonCouleur(Color.BLACK);
        sliderEpaisseurTrait.setValue(1);
        color = Color.BLACK;
        value = 1;
        if (ardoise1.getdCourant() != null) {
            ardoise1.getdCourant().getStyle().couleur = color;
            ardoise1.getdCourant().getStyle().epaisseur = 1;
        }
    }//GEN-LAST:event_boutonReinitialiserStyleActionPerformed

    private void boutonReinitialiserStyleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boutonReinitialiserStyleKeyPressed
        this.KeyPressed(evt);
    }//GEN-LAST:event_boutonReinitialiserStyleKeyPressed
    
    public void setStrokeValue(int value) {
        sliderEpaisseurTrait.setValue(value);
    }
    
    public void remplissageBoutonCouleur (Color color) {
       boutonCouleur.setBackground(color);
    }
    
// J'ai mis en commentaire le main inclus par netbeans    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Appli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Appli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Appli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Appli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Appli().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private GUI.Ardoise ardoise1;
    private javax.swing.JLabel booleanConvexe;
    private javax.swing.JToggleButton boutonCarre;
    private javax.swing.JToggleButton boutonCercle;
    private javax.swing.JButton boutonCouleur;
    private javax.swing.JToggleButton boutonDessinLibre;
    private javax.swing.JButton boutonEffacerTout;
    private javax.swing.JToggleButton boutonParallelogramme;
    private javax.swing.JToggleButton boutonPolyLine;
    private javax.swing.JToggleButton boutonPolygone;
    private javax.swing.JToggleButton boutonRectangle;
    private javax.swing.JButton boutonReinitialiserStyle;
    private javax.swing.JButton boutonReinitialiserZoom;
    private javax.swing.JButton boutonRepere;
    private javax.swing.JToggleButton boutonSelec;
    private javax.swing.JButton boutonSup;
    private javax.swing.JButton boutonZoomMoins;
    private javax.swing.JButton boutonZoomPlus;
    private javax.swing.ButtonGroup buttonGroupActions;
    private javax.swing.JMenuItem fichierMenuItemOuvrir;
    private javax.swing.JMenuItem fichierMenuItemSauver;
    private javax.swing.JLabel isConvexe;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel labelBas;
    private javax.swing.JLabel labelElement;
    private javax.swing.JLabel labelNumeroEpaisseurTrait;
    private javax.swing.JLabel labelTrait;
    private javax.swing.JLabel labelTrait1;
    private javax.swing.JLabel maxX;
    private javax.swing.JLabel maxY;
    private javax.swing.JMenu menuActions;
    private javax.swing.JMenu menuEquationCartesienne;
    private javax.swing.JMenu menuFichier;
    private javax.swing.JMenuItem menuItemCercle;
    private javax.swing.JMenuItem menuItemDroite;
    private javax.swing.JMenuItem menuItemSegment;
    private javax.swing.JLabel minX;
    private javax.swing.JLabel minY;
    private javax.swing.JPanel panelCaracterisiques;
    private javax.swing.JPanel panelStyleGraphique;
    private javax.swing.JPanel panneauZoom;
    private javax.swing.JLabel perimetre;
    private javax.swing.JSlider sliderEpaisseurTrait;
    private javax.swing.JLabel surface;
    private javax.swing.JTextField valeurMaxX;
    private javax.swing.JTextField valeurMaxY;
    private javax.swing.JTextField valeurMinX;
    private javax.swing.JTextField valeurMinY;
    private javax.swing.JLabel valeurPerimetre;
    private javax.swing.JLabel valeurSurface;
    // End of variables declaration//GEN-END:variables
}
